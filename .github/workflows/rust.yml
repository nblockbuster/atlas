on: [push, pull_request, workflow_dispatch]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: macos-latest
          TARGET: x86_64-apple-darwin

        # - os: ubuntu-latest
        #   TARGET: arm-unknown-linux-musleabihf

        # - os: ubuntu-latest
        #   TARGET: armv7-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master

    - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "rust-build"

    - name: Build
      run: cargo build --verbose --release --target=${{ matrix.TARGET }}

    - name: Copy Plugins (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir ./target/release/plugins
        cp ./target/release/*.dll ./target/release/plugins

    - name: Copy Plugins (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir ./target/release/plugins
        cp ./target/release/*.so ./target/release/plugins

    - name: Copy Plugins (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir ./target/release/plugins
        cp ./target/release/*.dylib ./target/release/plugins
        
    - name: Publish artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: atlas-windows-x64
        path: |
          ./target/release/*.exe
          ./target/release/*.pdb
          ./target/release/plugins

    - name: Publish artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: atlas-linux-x64
        path: |
          ./target/release/atlas
          ./target/release/plugins

    - name: Publish artifact (MacOS-x64)
      if: matrix.TARGET == 'x86_64-apple-darwin'
      uses: actions/upload-artifact@v4
      with:
        name: atlas-macos-x64
        path: |
          ./target/release/atlas
          ./target/release/plugins

    - name: Publish artifact (MacOS-aarch64)
      if: matrix.TARGET == 'aarch64-apple-darwin'
      uses: actions/upload-artifact@v4
      with:
        name: atlas-macos-aarch64
        path: |
          ./target/release/atlas
          ./target/release/plugins